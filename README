Tagging Later
You can also tag commits after you've moved past them. Suppose your commit history looks like this:


$ git log --pretty=oneline
15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch 'experiment'
a6b4c97498bd301d84096da251c98a07c7723e65 beginning write support
0d52aaab4479697da7686cl5f77a3d64d9l65190 one more thing
6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch 'experiment'
0b7434d86859cc7b8c3d5eldddfed66ff742fcbc added a commit function
4682c326l057305bdd6l6e23b64b0857d832627b added a todo file
166ae0c4d3f420721acbbll5cc33848dfcc2121a started write support
9fceb02d0ae598e95dc970b74767fl9372d6laf8 updated rakefile
964fl6d36dfccde844893cac5b347e7b3d44abbc commit the todo
8a5cbc430fla9c3d00faaeffd07798508422908a updated readme

Now, suppose you forgot to tag the project at v1.2, which was at the updated rakefile commit. You can add it after the fact. To tag that commit, you specify the commit checksum (or part of it) at the end of the command:

$ git tag -a v1.2 9fceb02